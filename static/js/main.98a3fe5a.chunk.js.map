{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/Loader/PersonLink.tsx","components/Loader/PeopleList.tsx","components/Loader/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","name","slug","sex","to","pathname","classNames","PeopleList","people","slugPerson","useParams","getPersonName","find","pers","map","born","died","motherName","fatherName","mother","undefined","father","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","catch","finally","length","getLinkClass","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.98a3fe5a.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${slug}`,\n      }}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const { slugPerson } = useParams();\n\n  function getPersonName(name: string) {\n    return people.find(pers => pers.name === name);\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(({\n          sex, born, died, motherName, fatherName, slug, name,\n        }) => {\n          const mother = motherName\n            ? getPersonName(motherName) : undefined;\n          const father = fatherName\n            ? getPersonName(fatherName) : undefined;\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': slug === slugPerson,\n              })}\n            >\n              <td>\n                <PersonLink person={({\n                  sex, born, died, motherName, fatherName, slug, name,\n                })}\n                />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? (\n                    <PersonLink person={mother} />\n                  )\n                  : motherName || (<span>-</span>)}\n              </td>\n              <td>\n                {father\n                  ? (\n                    <PersonLink person={father} />\n                  )\n                  : fatherName || (<span>-</span>)}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from './Loader';\nimport { PeopleList } from './PeopleList';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {!people.length ? (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )\n            : <PeopleList people={people} />}\n        </div>\n        {!isLoading && isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n      </div>\n    </>\n  );\n};\n","import {\n  Routes,\n  Route,\n  NavLink,\n  Navigate,\n} from 'react-router-dom';\n\nimport classNames from 'classnames';\nimport './App.scss';\nimport { PeoplePage } from './components/Loader/PeoplePage';\n\nconst getLinkClass = ({ isActive }:{ isActive: boolean }) => classNames(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={getLinkClass}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slugPerson\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}